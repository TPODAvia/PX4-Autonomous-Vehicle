<?xml version="1.0"?>

<launch>

  <!-- Any world: empty, flat, city, forest etc -->
  <arg name="world" default="$(find px4_sim)/worlds/city.world"/>
  
  <!-- Ground vehicles only: acker_rover, diff_rover, balance_bot, tank -->
  <arg name="vehicle" default="diff_rover"/>
  
  <!-- Gazebo enviroment -->
  <include file="$(find px4_sim)/launch/1mavros_posix_sitl.launch">
        <arg name="vehicle" value="$(arg vehicle)"/>
        <arg name="world" value="$(arg world)"/>
  </include>

  <!-- ORB SLAM 3 Stereo -->
  <param name="use_sim_time" value="false" />

  <!-- Main node -->
  <node name="orb_slam3" pkg="orb_slam3_ros" type="ros_stereo" output="screen">
  
      <!-- change the topics according to the dataset -->
      <remap from="/camera/left/image_raw"    to="/cam0/image_raw"/>
      <remap from="/camera/right/image_raw"   to="/cam1/image_raw"/>

      <!-- Parameters for original ORB-SLAM3 -->
      <param name="voc_file"      type="string" value="$(find orb_slam3_ros)/orb_slam3/Vocabulary/ORBvoc.txt.bin"/>
      <param name="settings_file" type="string" value="$(find orb_slam3_ros)/config/Stereo/EuRoC.yaml"/>

      <!-- Parameters for ROS -->
      <param name="world_frame_id"    type="string"   value="world" />
      <param name="cam_frame_id"      type="string"   value="camera" />
      <param name="enable_pangolin"   type="bool"     value="false" />
  </node>
  

  <!-- Trajectory path -->
  <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="trajectory_server_orb_slam3" output="screen" ns="orb_slam3_ros" >
      <param name="/target_frame_name" value="/world" />
      <param name="/source_frame_name" value="/camera" />
      <param name="/trajectory_update_rate" value="20.0" />
      <param name="/trajectory_publish_rate" value="20.0" />
  </node>

  <!-- OctoMap Server -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
      <param name="resolution" value="0.2" />
      <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
      <param name="frame_id" type="string" value="world" />
      <!-- maximum range to integrate (speedup!) -->
      <param name="sensor_model/max_range" value="9.0" />
      <param name="sensor_model/min" value="0.01" />
      <param name="sensor_model/max" value="0.99" />
      <param name="sensor_model/hit" value="0.9" />
      <param name="sensor_model/miss" value="0.45" />
      <param name="color/r" value="0.1" />
      <param name="color/g" value="0.1" />
      <param name="color/b" value="0.1" />
      <param name="color/a" value="1.0" />
      <!-- Filter out obstacles which are lower than 1 meter -->
      <param name="occupancy_min_z" value="1" />
      <param name="height_map" value="false" />
      <param name="publish_free_space" value="false" />
      <!-- data source to integrate (PointCloud2) -->
      <remap from="cloud_in" to="/orb_slam3/all_points" />
  </node>

	<!--  **************** RC Offboard Control ****************  -->
	<node pkg="px4_sim" type="cmd_vel_mavros_node" name="cmd_vel_mavros_node" output="screen">

  <!-- Ros transformation -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="tf_local_origin"
        args="0 0 0 0 0 0 world local_origin 10"/>

  <node pkg="tf" type="static_transform_publisher" name="tf_camera"
        args="0 0 0 -1.57 0 -1.57 fcu camera_link 10"/> -->


  <!-- <node pkg="tf" type="static_transform_publisher" name="map_nav_broadcaster" args="0 0 0 0 0 0 map nav 100"/> -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="map_nav_broadcaster" args="0 0 0.1 0 0 0 base_frame lidar 100"/> -->


  <!--  ************** Camera to Base_link tf transform ***************  -->
 	<node pkg="tf" type="static_transform_publisher" name="map_nav_broadcaster" args="0 0 0.1 0 0 0 base_frame camera 100"/>

  <!-- Navigation -->

  <node pkg="move_base" type="move_base" respawn="false" name="move_base_node" output="screen">
    <param name="footprint_padding" value="0.5" />
    <param name="controller_frequency" value="10.0" />
    <param name="controller_patience" value="3.0" />

    <param name="oscillation_timeout" value="30.0" />
    <param name="oscillation_distance" value="0.5" />
  
    <rosparam file="$(find px4_sim)/config/move_base/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find px4_sim)/config/move_base/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find px4_sim)/config/move_base/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find px4_sim)/config/move_base/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find px4_sim)/config/move_base/base_local_planner_params.yaml" command="load" />
  
  	<param name="planner_frequency" value="1.0" />
		<param name="planner_patience" value="5.0" /> 

		<param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
		<param name="controller_frequency" value="5.0" />
		<param name="controller_patience" value="15.0" />
  </node>


  <!-- Visualization -->
  <node name="rviz" pkg="rviz" type="rviz" 
  args="-d $(find orb_slam3_ros)/config/orb_slam3_no_imu.rviz" output="screen" />
          
  <!-- <node pkg="offboard_py" type="keyboard.py" name="offb_node_py" required="true" output="screen" /> -->

</launch>